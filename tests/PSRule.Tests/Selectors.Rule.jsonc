// Copyright (c) Microsoft Corporation.
// Licensed under the MIT License.
// Selectors for unit testing
[
  {
    // Synopsis: A selector to match basic objects
    "apiVersion": "github.com/microsoft/PSRule/v1",
    "kind": "Selector",
    "metadata": {
      "name": "BasicSelector"
    },
    "spec": {
      "if": {
        // Additional comments
        "allOf": [
          // Additional comments
          {
            // Additional comments
            "field": "Name",
            // Additional comments
            "equals": "TargetObject1"
            // Additional comments
          },
          {
            // Additional comments
            "field": "Value",
            // Additional comments
            "equals": "value1"
            // Additional comments
          }
        ]
      }
    }
  },
  {
    // Synopsis: A selector to match objects using a specific JSON schema
    "apiVersion": "github.com/microsoft/PSRule/v1",
    "kind": "Selector",
    "metadata": {
      "name": "SelectJsonSchema"
    },
    "spec": {
      "if": {
        "field": "$schema",
        "match": "^(https{0,1}://schema\\.management\\.azure\\.com/schemas/.*/deploymentTemplate\\.json)$"
      }
    }
  },
  {
    // Synopsis: A selector to match object with a field
    "apiVersion": "github.com/microsoft/PSRule/v1",
    "kind": "Selector",
    "metadata": {
      "name": "HasCustomValueField"
    },
    "spec": {
      "if": {
        "field": "CustomValue",
        "exists": true
      }
    }
  },
  {
    // Synopsis: Test AnyOf
    "apiVersion": "github.com/microsoft/PSRule/v1",
    "kind": "Selector",
    "metadata": {
      "name": "JsonAnyOf"
    },
    "spec": {
      "if": {
        "anyOf": [
          {
            "field": "AlternateName",
            "exists": true
          },
          {
            "field": "Name",
            "exists": true
          }
        ]
      }
    }
  },
  {
    // Synopsis: Test AllOf
    "apiVersion": "github.com/microsoft/PSRule/v1",
    "kind": "Selector",
    "metadata": {
      "name": "JsonAllOf"
    },
    "spec": {
      "if": {
        "allOf": [
          {
            "field": "AlternateName",
            "exists": true
          },
          {
            "field": "Name",
            "exists": true
          }
        ]
      }
    }
  },
  {
    //Synopsis: Test Not
    "apiVersion": "github.com/microsoft/PSRule/v1",
    "kind": "Selector",
    "metadata": {
      "name": "JsonNot"
    },
    "spec": {
      "if": {
        "not": {
          "anyOf": [
            {
              "field": "AlternateName",
              "exists": true
            },
            {
              "field": "Name",
              "exists": true
            }
          ]
        }
      }
    }
  },
  {
    // Synopsis: Test custom value is in
    "apiVersion": "github.com/microsoft/PSRule/v1",
    "kind": "Selector",
    "metadata": {
      "name": "JsonCustomValueIn"
    },
    "spec": {
      "if": {
        "field": "CustomValue",
        "in": [
          "Value1",
          "Value2"
        ]
      }
    }
  },
  {
    // Synopsis: Test exists true
    "apiVersion": "github.com/microsoft/PSRule/v1",
    "kind": "Selector",
    "metadata": {
      "name": "JsonExistsTrue"
    },
    "spec": {
      "if": {
        "field": "Value",
        "exists": true
      }
    }
  },
  {
    // Synopsis: Test exists false
    "apiVersion": "github.com/microsoft/PSRule/v1",
    "kind": "Selector",
    "metadata": {
      "name": "JsonExistsFalse"
    },
    "spec": {
      "if": {
        "field": "Value",
        "exists": false
      }
    }
  },
  {
    // Synopsis: Test equals
    "apiVersion": "github.com/microsoft/PSRule/v1",
    "kind": "Selector",
    "metadata": {
      "name": "JsonEquals"
    },
    "spec": {
      "if": {
        "allOf": [
          {
            "field": "ValueString",
            "equals": "abc",
            "caseSensitive": true
          },
          {
            "field": "ValueInt",
            "equals": 123
          },
          {
            "field": "ValueBool",
            "equals": true
          },
          {
            "anyOf": [
              {
                "field": "ValueEnum",
                "exists": false
              },
              {
                "field": "ValueEnum",
                "equals": "All",
                "convert": true
              }
            ]
          }
        ]
      }
    }
  },
  {
    // Synopsis: Test notEquals
    "apiVersion": "github.com/microsoft/PSRule/v1",
    "kind": "Selector",
    "metadata": {
      "name": "JsonNotEquals"
    },
    "spec": {
      "if": {
        "allOf": [
          {
            "field": "ValueString",
            "notEquals": "abc",
            "caseSensitive": true
          },
          {
            "field": "ValueInt",
            "notEquals": 123
          },
          {
            "field": "ValueBool",
            "notEquals": true
          },
          {
            "anyOf": [
              {
                "field": "ValueEnum",
                "exists": false
              },
              {
                "field": "ValueEnum",
                "notEquals": "All",
                "convert": true
              }
            ]
          }
        ]
      }
    }
  },
  {
    // Synopsis: Test hasValue true
    "apiVersion": "github.com/microsoft/PSRule/v1",
    "kind": "Selector",
    "metadata": {
      "name": "JsonHasValueTrue"
    },
    "spec": {
      "if": {
        "field": "Value",
        "hasValue": true
      }
    }
  },
  {
    // Synopsis: Test hasValue false
    "apiVersion": "github.com/microsoft/PSRule/v1",
    "kind": "Selector",
    "metadata": {
      "name": "JsonHasValueFalse"
    },
    "spec": {
      "if": {
        "field": "Value",
        "hasValue": false
      }
    }
  },
  {
    // Synopsis: Test match
    "apiVersion": "github.com/microsoft/PSRule/v1",
    "kind": "Selector",
    "metadata": {
      "name": "JsonMatch"
    },
    "spec": {
      "if": {
        "field": "Value",
        "match": "^(abc|efg)$"
      }
    }
  },
  {
    // Synopsis: Test match
    "apiVersion": "github.com/microsoft/PSRule/v1",
    "kind": "Selector",
    "metadata": {
      "name": "JsonMatchCaseSensitive"
    },
    "spec": {
      "if": {
        "field": "Value",
        "match": "^(abc|efg)$",
        "caseSensitive": true
      }
    }
  },
  {
    // Synopsis: Test notMatch
    "apiVersion": "github.com/microsoft/PSRule/v1",
    "kind": "Selector",
    "metadata": {
      "name": "JsonNotMatch"
    },
    "spec": {
      "if": {
        "field": "Value",
        "notMatch": "^(abc|efg)$"
      }
    }
  },
  {
    // Synopsis: Test notMatch
    "apiVersion": "github.com/microsoft/PSRule/v1",
    "kind": "Selector",
    "metadata": {
      "name": "JsonNotMatchCaseSensitive"
    },
    "spec": {
      "if": {
        "field": "Value",
        "notMatch": "^(abc|efg)$",
        "caseSensitive": true
      }
    }
  },
  {
    // Synopsis: Test in
    "apiVersion": "github.com/microsoft/PSRule/v1",
    "kind": "Selector",
    "metadata": {
      "name": "JsonIn"
    },
    "spec": {
      "if": {
        "field": "Value",
        "in": [
          "Value1",
          "Value2"
        ]
      }
    }
  },
  {
    // Synopsis: Test notIn
    "apiVersion": "github.com/microsoft/PSRule/v1",
    "kind": "Selector",
    "metadata": {
      "name": "JsonNotIn"
    },
    "spec": {
      "if": {
        "field": "Value",
        "notIn": [
          "Value1",
          "Value2"
        ]
      }
    }
  },
  {
    // Synopsis: Test less
    "apiVersion": "github.com/microsoft/PSRule/v1",
    "kind": "Selector",
    "metadata": {
      "name": "JsonLess"
    },
    "spec": {
      "if": {
        "anyOf": [
          {
            "field": "Value",
            "less": 3
          },
          {
            "field": "ValueStr",
            "less": 0,
            "convert": true
          }
        ]
      }
    }
  },
  {
    //Synopsis: Test lessOrEquals
    "apiVersion": "github.com/microsoft/PSRule/v1",
    "kind": "Selector",
    "metadata": {
      "name": "JsonLessOrEquals"
    },
    "spec": {
      "if": {
        "anyOf": [
          {
            "field": "Value",
            "lessOrEquals": 3
          },
          {
            "field": "ValueStr",
            "lessOrEquals": 0,
            "convert": true
          }
        ]
      }
    }
  },
  {
    // Synopsis: Test greater
    "apiVersion": "github.com/microsoft/PSRule/v1",
    "kind": "Selector",
    "metadata": {
      "name": "JsonGreater"
    },
    "spec": {
      "if": {
        "anyOf": [
          {
            "field": "Value",
            "greater": 3
          },
          {
            "field": "ValueStr",
            "greater": -1,
            "convert": true
          }
        ]
      }
    }
  },
  {
    // Synopsis: Test greaterOrEquals
    "apiVersion": "github.com/microsoft/PSRule/v1",
    "kind": "Selector",
    "metadata": {
      "name": "JsonGreaterOrEquals"
    },
    "spec": {
      "if": {
        "anyOf": [
          {
            "field": "Value",
            "greaterOrEquals": 3
          },
          {
            "field": "ValueStr",
            "greaterOrEquals": -1,
            "convert": true
          }
        ]
      }
    }
  },
  {
    // Synopsis: Test startsWith
    "apiVersion": "github.com/microsoft/PSRule/v1",
    "kind": "Selector",
    "metadata": {
      "name": "JsonStartsWith"
    },
    "spec": {
      "if": {
        "allOf": [
          {
            "anyOf": [
              {
                "field": "Value",
                "startsWith": "a"
              },
              {
                "field": "Value",
                "startsWith": "e",
                "caseSensitive": true
              }
            ]
          },
          {
            "field": "Value",
            "startsWith": [
              "a",
              "e"
            ]
          },
          {
            "anyOf": [
              {
                "field": "OtherValue",
                "exists": false
              },
              {
                "field": "OtherValue",
                "startsWith": "a",
                "convert": true
              }
            ]
          }
        ]
      }
    }
  },
  {
    // Synopsis: Test notStartsWith
    "apiVersion": "github.com/microsoft/PSRule/v1",
    "kind": "Selector",
    "metadata": {
      "name": "JsonNotStartsWith"
    },
    "spec": {
      "if": {
        "allOf": [
          {
            "anyOf": [
              {
                "field": "Value",
                "notStartsWith": "a"
              },
              {
                "field": "Value",
                "notStartsWith": "e",
                "caseSensitive": true
              }
            ]
          },
          {
            "field": "Value",
            "notStartsWith": [
              "a",
              "e"
            ]
          },
          {
            "anyOf": [
              {
                "field": "OtherValue",
                "exists": false
              },
              {
                "field": "OtherValue",
                "notStartsWith": "a",
                "convert": true
              }
            ]
          }
        ]
      }
    }
  },
  {
    // Synopsis: Test endsWith
    "apiVersion": "github.com/microsoft/PSRule/v1",
    "kind": "Selector",
    "metadata": {
      "name": "JsonEndsWith"
    },
    "spec": {
      "if": {
        "allOf": [
          {
            "anyOf": [
              {
                "field": "Value",
                "endsWith": "c"
              },
              {
                "field": "Value",
                "endsWith": "g",
                "caseSensitive": true
              }
            ]
          },
          {
            "field": "Value",
            "endsWith": [
              "c",
              "g"
            ]
          },
          {
            "anyOf": [
              {
                "field": "OtherValue",
                "exists": false
              },
              {
                "field": "OtherValue",
                "endsWith": "l",
                "convert": true
              }
            ]
          }
        ]
      }
    }
  },
  {
    // Synopsis: Test notEndsWith
    "apiVersion": "github.com/microsoft/PSRule/v1",
    "kind": "Selector",
    "metadata": {
      "name": "JsonNotEndsWith"
    },
    "spec": {
      "if": {
        "allOf": [
          {
            "anyOf": [
              {
                "field": "Value",
                "notEndsWith": "c"
              },
              {
                "field": "Value",
                "notEndsWith": "g",
                "caseSensitive": true
              }
            ]
          },
          {
            "field": "Value",
            "notEndsWith": [
              "c",
              "g"
            ]
          },
          {
            "anyOf": [
              {
                "field": "OtherValue",
                "exists": false
              },
              {
                "field": "OtherValue",
                "notEndsWith": "l",
                "convert": true
              }
            ]
          }
        ]
      }
    }
  },
  {
    // Synopsis: Test contains
    "apiVersion": "github.com/microsoft/PSRule/v1",
    "kind": "Selector",
    "metadata": {
      "name": "JsonContains"
    },
    "spec": {
      "if": {
        "allOf": [
          {
            "anyOf": [
              {
                "field": "Value",
                "contains": "ab"
              },
              {
                "field": "Value",
                "contains": "bc",
                "caseSensitive": true
              }
            ]
          },
          {
            "field": "Value",
            "contains": [
              "ab",
              "bc"
            ]
          },
          {
            "anyOf": [
              {
                "field": "OtherValue",
                "exists": false
              },
              {
                "field": "OtherValue",
                "contains": "l",
                "convert": true
              }
            ]
          }
        ]
      }
    }
  },
  {
    // Synopsis: Test notContains
    "apiVersion": "github.com/microsoft/PSRule/v1",
    "kind": "Selector",
    "metadata": {
      "name": "JsonNotContains"
    },
    "spec": {
      "if": {
        "allOf": [
          {
            "anyOf": [
              {
                "field": "Value",
                "notContains": "ab"
              },
              {
                "field": "Value",
                "notContains": "bc",
                "caseSensitive": true
              }
            ]
          },
          {
            "field": "Value",
            "notContains": [
              "ab",
              "bc"
            ]
          },
          {
            "anyOf": [
              {
                "field": "OtherValue",
                "exists": false
              },
              {
                "field": "OtherValue",
                "notContains": "l",
                "convert": true
              }
            ]
          }
        ]
      }
    }
  },
  {
    // Synopsis: Test like
    "apiVersion": "github.com/microsoft/PSRule/v1",
    "kind": "Selector",
    "metadata": {
      "name": "JsonLike"
    },
    "spec": {
      "if": {
        "allOf": [
          {
            "anyOf": [
              {
                "field": "Value",
                "like": "ab*"
              },
              {
                "field": "Value",
                "like": "*f*",
                "caseSensitive": true
              }
            ]
          },
          {
            "field": "Value",
            "like": [
              "ab*",
              "*f*"
            ]
          },
          {
            "anyOf": [
              {
                "field": "OtherValue",
                "exists": false
              },
              {
                "field": "OtherValue",
                "like": "12*",
                "convert": true
              }
            ]
          }
        ]
      }
    }
  },
  {
    // Synopsis: Test notLike
    "apiVersion": "github.com/microsoft/PSRule/v1",
    "kind": "Selector",
    "metadata": {
      "name": "JsonNotLike"
    },
    "spec": {
      "if": {
        "allOf": [
          {
            "anyOf": [
              {
                "field": "Value",
                "notLike": "ab*"
              },
              {
                "field": "Value",
                "notLike": "*f*",
                "caseSensitive": true
              }
            ]
          },
          {
            "field": "Value",
            "notLike": [
              "ab*",
              "*f*"
            ]
          },
          {
            "anyOf": [
              {
                "field": "OtherValue",
                "exists": false
              },
              {
                "field": "OtherValue",
                "notLike": "12*",
                "convert": true
              }
            ]
          }
        ]
      }
    }
  },
  {
    // Synopsis: Test isString
    "apiVersion": "github.com/microsoft/PSRule/v1",
    "kind": "Selector",
    "metadata": {
      "name": "JsonIsStringTrue"
    },
    "spec": {
      "if": {
        "field": "Value",
        "isString": true
      }
    }
  },
  {
    // Synopsis: Test isString
    "apiVersion": "github.com/microsoft/PSRule/v1",
    "kind": "Selector",
    "metadata": {
      "name": "JsonIsStringFalse"
    },
    "spec": {
      "if": {
        "field": "Value",
        "isString": false
      }
    }
  },
  {
    // Synopsis: Test isArray
    "apiVersion": "github.com/microsoft/PSRule/v1",
    "kind": "Selector",
    "metadata": {
      "name": "JsonIsArrayTrue"
    },
    "spec": {
      "if": {
        "field": "Value",
        "isArray": true
      }
    }
  },
  {
    // Synopsis: Test isArray
    "apiVersion": "github.com/microsoft/PSRule/v1",
    "kind": "Selector",
    "metadata": {
      "name": "JsonIsArrayFalse"
    },
    "spec": {
      "if": {
        "field": "Value",
        "isArray": false
      }
    }
  },
  {
    // Synopsis: Test IsBoolean
    "apiVersion": "github.com/microsoft/PSRule/v1",
    "kind": "Selector",
    "metadata": {
      "name": "JsonIsBooleanTrue"
    },
    "spec": {
      "if": {
        "field": "Value",
        "isBoolean": true
      }
    }
  },
  {
    // Synopsis: Test IsBoolean with conversion
    "apiVersion": "github.com/microsoft/PSRule/v1",
    "kind": "Selector",
    "metadata": {
      "name": "JsonIsBooleanTrueWithConversion"
    },
    "spec": {
      "if": {
        "field": "Value",
        "isBoolean": true,
        "convert": true
      }
    }
  },
  {
    // Synopsis: Test IsBoolean
    "apiVersion": "github.com/microsoft/PSRule/v1",
    "kind": "Selector",
    "metadata": {
      "name": "JsonIsBooleanFalse"
    },
    "spec": {
      "if": {
        "field": "Value",
        "isBoolean": false
      }
    }
  },
  {
    // Synopsis: Test IsBoolean with conversion
    "apiVersion": "github.com/microsoft/PSRule/v1",
    "kind": "Selector",
    "metadata": {
      "name": "JsonIsBooleanFalseWithConversion"
    },
    "spec": {
      "if": {
        "field": "Value",
        "isBoolean": false,
        "convert": true
      }
    }
  },
  {
    // Synopsis: Test IsDateTime
    "apiVersion": "github.com/microsoft/PSRule/v1",
    "kind": "Selector",
    "metadata": {
      "name": "JsonIsDateTimeTrue"
    },
    "spec": {
      "if": {
        "field": "Value",
        "isDateTime": true
      }
    }
  },
  {
    // Synopsis: Test IsDateTime with conversion
    "apiVersion": "github.com/microsoft/PSRule/v1",
    "kind": "Selector",
    "metadata": {
      "name": "JsonIsDateTimeTrueWithConversion"
    },
    "spec": {
      "if": {
        "field": "Value",
        "isDateTime": true,
        "convert": true
      }
    }
  },
  {
    // Synopsis: Test IsDateTime
    "apiVersion": "github.com/microsoft/PSRule/v1",
    "kind": "Selector",
    "metadata": {
      "name": "JsonIsDateTimeFalse"
    },
    "spec": {
      "if": {
        "field": "Value",
        "isDateTime": false
      }
    }
  },
  {
    // Synopsis: Test IsDateTime with conversion
    "apiVersion": "github.com/microsoft/PSRule/v1",
    "kind": "Selector",
    "metadata": {
      "name": "JsonIsDateTimeFalseWithConversion"
    },
    "spec": {
      "if": {
        "field": "Value",
        "isDateTime": false,
        "convert": true
      }
    }
  },
  {
    // Synopsis: Test IsInteger
    "apiVersion": "github.com/microsoft/PSRule/v1",
    "kind": "Selector",
    "metadata": {
      "name": "JsonIsIntegerTrue"
    },
    "spec": {
      "if": {
        "field": "Value",
        "isInteger": true
      }
    }
  },
  {
    // Synopsis: Test IsInteger with conversion
    "apiVersion": "github.com/microsoft/PSRule/v1",
    "kind": "Selector",
    "metadata": {
      "name": "JsonIsIntegerTrueWithConversion"
    },
    "spec": {
      "if": {
        "field": "Value",
        "isInteger": true,
        "convert": true
      }
    }
  },
  {
    // Synopsis: Test IsInteger
    "apiVersion": "github.com/microsoft/PSRule/v1",
    "kind": "Selector",
    "metadata": {
      "name": "JsonIsIntegerFalse"
    },
    "spec": {
      "if": {
        "field": "Value",
        "isInteger": false
      }
    }
  },
  {
    // Synopsis: Test IsInteger with conversion
    "apiVersion": "github.com/microsoft/PSRule/v1",
    "kind": "Selector",
    "metadata": {
      "name": "JsonIsIntegerFalseWithConversion"
    },
    "spec": {
      "if": {
        "field": "Value",
        "isInteger": false,
        "convert": true
      }
    }
  },
  {
    // Synopsis: Test IsNumeric
    "apiVersion": "github.com/microsoft/PSRule/v1",
    "kind": "Selector",
    "metadata": {
      "name": "JsonIsNumericTrue"
    },
    "spec": {
      "if": {
        "field": "Value",
        "isNumeric": true
      }
    }
  },
  {
    // Synopsis: Test IsNumeric
    "apiVersion": "github.com/microsoft/PSRule/v1",
    "kind": "Selector",
    "metadata": {
      "name": "JsonIsNumericTrueWithConversion"
    },
    "spec": {
      "if": {
        "field": "Value",
        "isNumeric": true,
        "convert": true
      }
    }
  },
  {
    // Synopsis: Test IsNumeric
    "apiVersion": "github.com/microsoft/PSRule/v1",
    "kind": "Selector",
    "metadata": {
      "name": "JsonIsNumericFalse"
    },
    "spec": {
      "if": {
        "field": "Value",
        "isNumeric": false
      }
    }
  },
  {
    // Synopsis: Test IsNumeric
    "apiVersion": "github.com/microsoft/PSRule/v1",
    "kind": "Selector",
    "metadata": {
      "name": "JsonIsNumericFalseWithConversion"
    },
    "spec": {
      "if": {
        "field": "Value",
        "isNumeric": false,
        "convert": true
      }
    }
  },
  {
    // Synopsis: Test isLower
    "apiVersion": "github.com/microsoft/PSRule/v1",
    "kind": "Selector",
    "metadata": {
      "name": "JsonIsLowerTrue"
    },
    "spec": {
      "if": {
        "field": "Value",
        "isLower": true
      }
    }
  },
  {
    // Synopsis: Test isLower
    "apiVersion": "github.com/microsoft/PSRule/v1",
    "kind": "Selector",
    "metadata": {
      "name": "JsonIsLowerFalse"
    },
    "spec": {
      "if": {
        "field": "Value",
        "isLower": false
      }
    }
  },
  {
    // Synopsis: Test isUpper
    "apiVersion": "github.com/microsoft/PSRule/v1",
    "kind": "Selector",
    "metadata": {
      "name": "JsonIsUpperTrue"
    },
    "spec": {
      "if": {
        "field": "Value",
        "isUpper": true
      }
    }
  },
  {
    // Synopsis: Test isUpper
    "apiVersion": "github.com/microsoft/PSRule/v1",
    "kind": "Selector",
    "metadata": {
      "name": "JsonIsUpperFalse"
    },
    "spec": {
      "if": {
        "field": "Value",
        "isUpper": false
      }
    }
  },
  {
    // Synopsis: Test setOf
    "apiVersion": "github.com/microsoft/PSRule/v1",
    "kind": "Selector",
    "metadata": {
      "name": "JsonSetOf"
    },
    "spec": {
      "if": {
        "field": "Value",
        "setOf": [
          "cluster-autoscaler",
          "kube-apiserver"
        ],
        "caseSensitive": true
      }
    }
  },
  {
    // Synopsis: Test subset
    "apiVersion": "github.com/microsoft/PSRule/v1",
    "kind": "Selector",
    "metadata": {
      "name": "JsonSubset"
    },
    "spec": {
      "if": {
        "field": "Value",
        "subset": [
          "cluster-autoscaler",
          "kube-apiserver"
        ],
        "caseSensitive": true,
        "unique": true
      }
    }
  },
  {
    // Synopsis: Test count
    "apiVersion": "github.com/microsoft/PSRule/v1",
    "kind": "Selector",
    "metadata": {
      "name": "JsonCount"
    },
    "spec": {
      "if": {
        "field": "Value",
        "count": 2
      }
    }
  },
  {
    // Synopsis: Test notCount
    "apiVersion": "github.com/microsoft/PSRule/v1",
    "kind": "Selector",
    "metadata": {
      "name": "JsonNotCount"
    },
    "spec": {
      "if": {
        "field": "Value",
        "notCount": 2
      }
    }
  },
  {
    // Synopsis: Test hasSchema
    "apiVersion": "github.com/microsoft/PSRule/v1",
    "kind": "Selector",
    "metadata": {
      "name": "JsonHasSchema"
    },
    "spec": {
      "if": {
        "field": ".",
        "hasSchema": [
          "https://schema.management.azure.com/schemas/2019-04-01/deploymentParameters.json#",
          "https://schema.management.azure.com/schemas/2015-01-01/deploymentParameters.json#"
        ]
      }
    }
  },
  {
    // Synopsis: Test hasSchema ignoring scheme
    "apiVersion": "github.com/microsoft/PSRule/v1",
    "kind": "Selector",
    "metadata": {
      "name": "JsonHasSchemaIgnoreScheme"
    },
    "spec": {
      "if": {
        "field": ".",
        "hasSchema": [
          "https://schema.management.azure.com/schemas/2019-04-01/deploymentParameters.json#",
          "https://schema.management.azure.com/schemas/2015-01-01/deploymentParameters.json#"
        ],
        "ignoreScheme": true
      }
    }
  },
  {
    // Synopsis: Test hasSchema with case sensitivity
    "apiVersion": "github.com/microsoft/PSRule/v1",
    "kind": "Selector",
    "metadata": {
      "name": "JsonHasSchemaCaseSensitive"
    },
    "spec": {
      "if": {
        "field": ".",
        "hasSchema": [
          "https://schema.management.azure.com/schemas/2015-01-01/deploymentParameters.json#",
          "https://schema.management.azure.com/schemas/2019-04-01/deploymentParameters.json#"
        ],
        "caseSensitive": true
      }
    }
  },
  {
    // Synopsis: Test hasSchema matching any schema
    "apiVersion": "github.com/microsoft/PSRule/v1",
    "kind": "Selector",
    "metadata": {
      "name": "JsonHasAnySchema"
    },
    "spec": {
      "if": {
        "field": ".",
        "hasSchema": []
      }
    }
  },
  {
    // Synopsis: Test version
    "apiVersion": "github.com/microsoft/PSRule/v1",
    "kind": "Selector",
    "metadata": {
      "name": "JsonVersion"
    },
    "spec": {
      "if": {
        "field": "version",
        "version": "^1.2.3"
      }
    }
  },
  {
    // Synopsis: Test version with prerelease
    "apiVersion": "github.com/microsoft/PSRule/v1",
    "kind": "Selector",
    "metadata": {
      "name": "JsonVersionWithPrerelease"
    },
    "spec": {
      "if": {
        "field": "version",
        "version": "^1.2.3",
        "includePrerelease": true
      }
    }
  },
  {
    // Synopsis: Test any valid version
    "apiVersion": "github.com/microsoft/PSRule/v1",
    "kind": "Selector",
    "metadata": {
      "name": "JsonVersionAnyVersion"
    },
    "spec": {
      "if": {
        "field": "version",
        "version": ""
      }
    }
  },
  {
    // Synopsis: Test hasDefault
    "apiVersion": "github.com/microsoft/PSRule/v1",
    "kind": "Selector",
    "metadata": {
      "name": "JsonHasDefault"
    },
    "spec": {
      "if": {
        "allOf": [
          {
            "field": "integerValue",
            "hasDefault": 100
          },
          {
            "field": "boolValue",
            "hasDefault": true
          },
          {
            "field": "stringValue",
            "hasDefault": "testValue",
            "caseSensitive": true
          }
        ]
      }
    }
  },
  {
    // Synopsis: Test with type
    "apiVersion": "github.com/microsoft/PSRule/v1",
    "kind": "Selector",
    "metadata": {
      "name": "JsonTypeEquals"
    },
    "spec": {
      "if": {
        "type": ".",
        "equals": "CustomType1"
      }
    }
  },
  {
    // Synopsis: Test equals with name
    "apiVersion": "github.com/microsoft/PSRule/v1",
    "kind": "Selector",
    "metadata": {
      "name": "JsonNameEquals"
    },
    "spec": {
      "if": {
        "name": ".",
        "equals": "TargetObject1"
      }
    }
  },
  {
    // Synopsis: Test notEquals with name
    "apiVersion": "github.com/microsoft/PSRule/v1",
    "kind": "Selector",
    "metadata": {
      "name": "JsonNameNotEquals"
    },
    "spec": {
      "if": {
        "name": ".",
        "notEquals": "TargetObject1"
      }
    }
  },
  {
    // Synopsis: Test hasValue with name
    "apiVersion": "github.com/microsoft/PSRule/v1",
    "kind": "Selector",
    "metadata": {
      "name": "JsonNameHasValue"
    },
    "spec": {
      "if": {
        "name": ".",
        "hasValue": true
      }
    }
  },
  {
    // Synopsis: Test match with name
    "apiVersion": "github.com/microsoft/PSRule/v1",
    "kind": "Selector",
    "metadata": {
      "name": "JsonNameMatch"
    },
    "spec": {
      "if": {
        "name": ".",
        "match": ".*1$"
      }
    }
  },
  {
    // Synopsis: Test notMatch with name
    "apiVersion": "github.com/microsoft/PSRule/v1",
    "kind": "Selector",
    "metadata": {
      "name": "JsonNameNotMatch"
    },
    "spec": {
      "if": {
        "name": ".",
        "notMatch": ".*1$"
      }
    }
  },
  {
    // Synopsis: Test in with name
    "apiVersion": "github.com/microsoft/PSRule/v1",
    "kind": "Selector",
    "metadata": {
      "name": "JsonNameIn"
    },
    "spec": {
      "if": {
        "name": ".",
        "in": [
          "TargetObject1"
        ]
      }
    }
  },
  {
    // Synopsis: Test notIn with name
    "apiVersion": "github.com/microsoft/PSRule/v1",
    "kind": "Selector",
    "metadata": {
      "name": "JsonNameNotIn"
    },
    "spec": {
      "if": {
        "name": ".",
        "notIn": [
          "TargetObject1"
        ]
      }
    }
  },
  {
    // Synopsis: Test startsWith with name
    "apiVersion": "github.com/microsoft/PSRule/v1",
    "kind": "Selector",
    "metadata": {
      "name": "JsonNameStartsWith"
    },
    "spec": {
      "if": {
        "name": ".",
        "startsWith": [
          "1"
        ]
      }
    }
  },
  {
    // Synopsis: Test endsWith with name
    "apiVersion": "github.com/microsoft/PSRule/v1",
    "kind": "Selector",
    "metadata": {
      "name": "JsonNameEndsWith"
    },
    "spec": {
      "if": {
        "name": ".",
        "endsWith": [
          "1"
        ]
      }
    }
  },
  {
    // Synopsis: Test contains with name
    "apiVersion": "github.com/microsoft/PSRule/v1",
    "kind": "Selector",
    "metadata": {
      "name": "JsonNameContains"
    },
    "spec": {
      "if": {
        "name": ".",
        "contains": [
          ".1."
        ]
      }
    }
  },
  {
    // Synopsis: Test isString with name
    "apiVersion": "github.com/microsoft/PSRule/v1",
    "kind": "Selector",
    "metadata": {
      "name": "JsonNameIsString"
    },
    "spec": {
      "if": {
        "name": ".",
        "isString": true
      }
    }
  },
  {
    // Synopsis: Test less with name
    "apiVersion": "github.com/microsoft/PSRule/v1",
    "kind": "Selector",
    "metadata": {
      "name": "JsonNameLess"
    },
    "spec": {
      "if": {
        "name": ".",
        "less": 8
      }
    }
  },
  {
    // Synopsis: Test lessOrEquals with name
    "apiVersion": "github.com/microsoft/PSRule/v1",
    "kind": "Selector",
    "metadata": {
      "name": "JsonNameLessOrEquals"
    },
    "spec": {
      "if": {
        "name": ".",
        "lessOrEquals": 7
      }
    }
  },
  {
    // Synopsis: Test greater with name
    "apiVersion": "github.com/microsoft/PSRule/v1",
    "kind": "Selector",
    "metadata": {
      "name": "JsonNameGreater"
    },
    "spec": {
      "if": {
        "name": ".",
        "greater": 8
      }
    }
  },
  {
    // Synopsis: Test greaterOrEquals with name
    "apiVersion": "github.com/microsoft/PSRule/v1",
    "kind": "Selector",
    "metadata": {
      "name": "JsonNameGreaterOrEquals"
    },
    "spec": {
      "if": {
        "name": ".",
        "greaterOrEquals": 9
      }
    }
  },
  {
    // Synopsis: Test isLower with name
    "apiVersion": "github.com/microsoft/PSRule/v1",
    "kind": "Selector",
    "metadata": {
      "name": "JsonNameIsLower"
    },
    "spec": {
      "if": {
        "name": ".",
        "isLower": true
      }
    }
  },
  {
    // Synopsis: Test isUpper with name
    "apiVersion": "github.com/microsoft/PSRule/v1",
    "kind": "Selector",
    "metadata": {
      "name": "JsonNameIsUpper"
    },
    "spec": {
      "if": {
        "name": ".",
        "isUpper": true
      }
    }
  },
  {
    // Synopsis: Test endsWith with source
    "apiVersion": "github.com/microsoft/PSRule/v1",
    "kind": "Selector",
    "metadata": {
      "name": "JsonEndsWithSource"
    },
    "spec": {
      "if": {
        "source": "Template",
        "endsWith": [
          "/template.json"
        ]
      }
    }
  },
  {
    // Synopsis: Test withinPath with source
    "apiVersion": "github.com/microsoft/PSRule/v1",
    "kind": "Selector",
    "metadata": {
      "name": "JsonSourceWithinPath"
    },
    "spec": {
      "if": {
        "source": "Template",
        "withinPath": [
          "deployments/path/"
        ]
      }
    }
  },
  {
    // Synopsis: Test withinPath with field
    "apiVersion": "github.com/microsoft/PSRule/v1",
    "kind": "Selector",
    "metadata": {
      "name": "JsonFieldWithinPath"
    },
    "spec": {
      "if": {
        "field": "FullName",
        "withinPath": [
          "policy/",
          "security/"
        ]
      }
    }
  },
  {
    // Synopsis: Test withinPath with source and case sensitive
    "apiVersion": "github.com/microsoft/PSRule/v1",
    "kind": "Selector",
    "metadata": {
      "name": "JsonSourceWithinPathCaseSensitive"
    },
    "spec": {
      "if": {
        "source": "Template",
        "withinPath": [
          "Deployments/Path/"
        ],
        "caseSensitive": true
      }
    }
  },
  {
    // Synopsis: Test withinPath with field and case sensitive
    "apiVersion": "github.com/microsoft/PSRule/v1",
    "kind": "Selector",
    "metadata": {
      "name": "JsonFieldWithinPathCaseSensitive"
    },
    "spec": {
      "if": {
        "field": "FullName",
        "withinPath": [
          "POLICY/",
          "SECURITY/"
        ],
        "caseSensitive": true
      }
    }
  },
  {
    // Synopsis: Test notWithinPath with source
    "apiVersion": "github.com/microsoft/PSRule/v1",
    "kind": "Selector",
    "metadata": {
      "name": "JsonSourceNotWithinPath"
    },
    "spec": {
      "if": {
        "source": "Template",
        "notWithinPath": [
          "deployments/path/"
        ]
      }
    }
  },
  {
    // Synopsis: Test notWithinPath with field
    "apiVersion": "github.com/microsoft/PSRule/v1",
    "kind": "Selector",
    "metadata": {
      "name": "JsonFieldNotWithinPath"
    },
    "spec": {
      "if": {
        "field": "FullName",
        "notWithinPath": [
          "policy/",
          "security/"
        ]
      }
    }
  },
  {
    // Synopsis: Test notWithinPath with source and case sensitive
    "apiVersion": "github.com/microsoft/PSRule/v1",
    "kind": "Selector",
    "metadata": {
      "name": "JsonSourceNotWithinPathCaseSensitive"
    },
    "spec": {
      "if": {
        "source": "Template",
        "notWithinPath": [
          "Deployments/Path/"
        ],
        "caseSensitive": true
      }
    }
  },
  {
    // Synopsis: Test notWithinPath with field and case sensitive
    "apiVersion": "github.com/microsoft/PSRule/v1",
    "kind": "Selector",
    "metadata": {
      "name": "JsonFieldNotWithinPathCaseSensitive"
    },
    "spec": {
      "if": {
        "field": "FullName",
        "notWithinPath": [
          "POLICY/",
          "SECURITY/"
        ],
        "caseSensitive": true
      }
    }
  },
  {
    // Synopsis: Test scope property with equals.
    "apiVersion": "github.com/microsoft/PSRule/v1",
    "kind": "Selector",
    "metadata": {
      "name": "JsonScopeEquals"
    },
    "spec": {
      "if": {
        "scope": ".",
        "equals": [
          "/scope1"
        ]
      }
    }
  },
  {
    // Synopsis: Test scope property with startsWith.
    "apiVersion": "github.com/microsoft/PSRule/v1",
    "kind": "Selector",
    "metadata": {
      "name": "JsonScopeStartsWith"
    },
    "spec": {
      "if": {
        "scope": ".",
        "startsWith": [
          "/scope1/",
          "/scope2/"
        ]
      }
    }
  },
  {
    // Synopsis: Test scope property with hasValue.
    "apiVersion": "github.com/microsoft/PSRule/v1",
    "kind": "Selector",
    "metadata": {
      "name": "JsonScopeHasValueFalse"
    },
    "spec": {
      "if": {
        "scope": ".",
        "hasValue": false
      }
    }
  },
  {
    // Synopsis: Test scope property with hasValue.
    "apiVersion": "github.com/microsoft/PSRule/v1",
    "kind": "Selector",
    "metadata": {
      "name": "JsonScopeHasValueTrue"
    },
    "spec": {
      "if": {
        "scope": ".",
        "hasValue": true
      }
    }
  },
  {
    // Synopsis: Test comparison with apiVersion.
    "apiVersion": "github.com/microsoft/PSRule/v1",
    "kind": "Selector",
    "metadata": {
      "name": "JsonAPIVersion"
    },
    "spec": {
      "if": {
        "field": "dateVersion",
        "apiVersion": ">=2015-10-01"
      }
    }
  },
  {
    // Synopsis: Test comparison with apiVersion.
    "apiVersion": "github.com/microsoft/PSRule/v1",
    "kind": "Selector",
    "metadata": {
      "name": "JsonAPIVersionWithPrerelease"
    },
    "spec": {
      "if": {
        "field": "dateVersion",
        "apiVersion": ">=2015-10-01",
        "includePrerelease": true
      }
    }
  },
  {
    // Synopsis: Test comparison with apiVersion.
    "apiVersion": "github.com/microsoft/PSRule/v1",
    "kind": "Selector",
    "metadata": {
      "name": "JsonAPIVersionAnyVersion"
    },
    "spec": {
      "if": {
        "field": "dateVersion",
        "apiVersion": ""
      }
    }
  }
]
