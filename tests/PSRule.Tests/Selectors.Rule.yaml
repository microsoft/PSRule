# Copyright (c) Microsoft Corporation.
# Licensed under the MIT License.

# Selectors for unit testing

---
# Synopsis: A selector to match basic objects
apiVersion: github.com/microsoft/PSRule/v1
kind: Selector
metadata:
  name: BasicSelector
spec:
  if:
    # Additional comments
    allOf:
      # Additional comments
      - field: Name
        # Additional comments
        equals: TargetObject1
        # Additional comments
      - field: Value
        # Additional comments
        equals: value1
        # Additional comments

---
# Synopsis: A selector to match objects using a specific JSON schema
apiVersion: github.com/microsoft/PSRule/v1
kind: Selector
metadata:
  name: SelectJsonSchema
spec:
  if:
    field: '$schema'
    match: '^(https{0,1}://schema\.management\.azure\.com/schemas/.*/deploymentTemplate\.json)$'

---
# Synopsis: A selector to match object with a field
apiVersion: github.com/microsoft/PSRule/v1
kind: Selector
metadata:
  name: HasCustomValueField
spec:
  if:
    field: 'CustomValue'
    exists: true

---
# Synopsis: Test AnyOf
apiVersion: github.com/microsoft/PSRule/v1
kind: Selector
metadata:
  name: YamlAnyOf
spec:
  if:
    anyOf:
      - field: 'AlternateName'
        exists: true
      - field: 'Name'
        exists: true

---
# Synopsis: Test AllOf
apiVersion: github.com/microsoft/PSRule/v1
kind: Selector
metadata:
  name: YamlAllOf
spec:
  if:
    allOf:
      - field: 'AlternateName'
        exists: true
      - field: 'Name'
        exists: true

---
# Synopsis: Test Not
apiVersion: github.com/microsoft/PSRule/v1
kind: Selector
metadata:
  name: YamlNot
spec:
  if:
    not:
      anyOf:
        - field: 'AlternateName'
          exists: true
        - field: 'Name'
          exists: true

---
# Synopsis: Test custom value is in
apiVersion: github.com/microsoft/PSRule/v1
kind: Selector
metadata:
  name: YamlCustomValueIn
spec:
  if:
    field: 'CustomValue'
    in:
      - 'Value1'
      - 'Value2'

---
# Synopsis: Test exists true
apiVersion: github.com/microsoft/PSRule/v1
kind: Selector
metadata:
  name: YamlExistsTrue
spec:
  if:
    field: 'Value'
    exists: true

---
# Synopsis: Test exists false
apiVersion: github.com/microsoft/PSRule/v1
kind: Selector
metadata:
  name: YamlExistsFalse
spec:
  if:
    field: 'Value'
    exists: false

---
# Synopsis: Test equals
apiVersion: github.com/microsoft/PSRule/v1
kind: Selector
metadata:
  name: YamlEquals
spec:
  if:
    allOf:
      - field: 'ValueString'
        equals: 'abc'
        caseSensitive: true
      - field: 'ValueInt'
        equals: 123
      - field: 'ValueBool'
        equals: true
      - anyOf:
          - field: 'ValueEnum'
            exists: false
          - field: 'ValueEnum'
            equals: 'All'
            convert: true

---
# Synopsis: Test notEquals
apiVersion: github.com/microsoft/PSRule/v1
kind: Selector
metadata:
  name: YamlNotEquals
spec:
  if:
    allOf:
      - field: 'ValueString'
        notEquals: 'abc'
        caseSensitive: true
      - field: 'ValueInt'
        notEquals: 123
      - field: 'ValueBool'
        notEquals: true
      - anyOf:
          - field: 'ValueEnum'
            exists: false
          - field: 'ValueEnum'
            notEquals: 'All'
            convert: true

---
# Synopsis: Test hasValue true
apiVersion: github.com/microsoft/PSRule/v1
kind: Selector
metadata:
  name: YamlHasValueTrue
spec:
  if:
    field: 'Value'
    hasValue: true

---
# Synopsis: Test hasValue false
apiVersion: github.com/microsoft/PSRule/v1
kind: Selector
metadata:
  name: YamlHasValueFalse
spec:
  if:
    field: 'Value'
    hasValue: false

---
# Synopsis: Test match
apiVersion: github.com/microsoft/PSRule/v1
kind: Selector
metadata:
  name: YamlMatch
spec:
  if:
    field: 'Value'
    match: '^(abc|efg)$'

---
# Synopsis: Test match
apiVersion: github.com/microsoft/PSRule/v1
kind: Selector
metadata:
  name: YamlMatchCaseSensitive
spec:
  if:
    field: 'Value'
    match: '^(abc|efg)$'
    caseSensitive: true

---
# Synopsis: Test notMatch
apiVersion: github.com/microsoft/PSRule/v1
kind: Selector
metadata:
  name: YamlNotMatch
spec:
  if:
    field: 'Value'
    notMatch: '^(abc|efg)$'

---
# Synopsis: Test notMatch
apiVersion: github.com/microsoft/PSRule/v1
kind: Selector
metadata:
  name: YamlNotMatchCaseSensitive
spec:
  if:
    field: 'Value'
    notMatch: '^(abc|efg)$'
    caseSensitive: true

---
# Synopsis: Test in
apiVersion: github.com/microsoft/PSRule/v1
kind: Selector
metadata:
  name: YamlIn
spec:
  if:
    field: 'Value'
    in:
      - 'Value1'
      - 'Value2'

---
# Synopsis: Test notIn
apiVersion: github.com/microsoft/PSRule/v1
kind: Selector
metadata:
  name: YamlNotIn
spec:
  if:
    field: 'Value'
    notIn:
      - 'Value1'
      - 'Value2'

---
# Synopsis: Test less
apiVersion: github.com/microsoft/PSRule/v1
kind: Selector
metadata:
  name: YamlLess
spec:
  if:
    anyOf:
      - field: 'Value'
        less: 3
      - field: 'ValueStr'
        less: 0
        convert: true

---
# Synopsis: Test lessOrEquals
apiVersion: github.com/microsoft/PSRule/v1
kind: Selector
metadata:
  name: YamlLessOrEquals
spec:
  if:
    anyOf:
      - field: 'Value'
        lessOrEquals: 3
      - field: 'ValueStr'
        lessOrEquals: 0
        convert: true

---
# Synopsis: Test greater
apiVersion: github.com/microsoft/PSRule/v1
kind: Selector
metadata:
  name: YamlGreater
spec:
  if:
    anyOf:
      - field: 'Value'
        greater: 3
      - field: 'ValueStr'
        greater: -1
        convert: true

---
# Synopsis: Test greaterOrEquals
apiVersion: github.com/microsoft/PSRule/v1
kind: Selector
metadata:
  name: YamlGreaterOrEquals
spec:
  if:
    anyOf:
      - field: 'Value'
        greaterOrEquals: 3
      - field: 'ValueStr'
        greaterOrEquals: -1
        convert: true

---
# Synopsis: Test startsWith
apiVersion: github.com/microsoft/PSRule/v1
kind: Selector
metadata:
  name: YamlStartsWith
spec:
  if:
    allOf:
      - anyOf:
          - field: 'Value'
            startsWith: 'a'
          - field: 'Value'
            startsWith: 'e'
            caseSensitive: true
      - field: 'Value'
        startsWith:
          - 'a'
          - 'e'
      - anyOf:
          - field: 'OtherValue'
            exists: false
          - field: 'OtherValue'
            startsWith: 'a'
            convert: true

---
# Synopsis: Test notStartsWith
apiVersion: github.com/microsoft/PSRule/v1
kind: Selector
metadata:
  name: YamlNotStartsWith
spec:
  if:
    allOf:
      - anyOf:
          - field: 'Value'
            notStartsWith: 'a'
          - field: 'Value'
            notStartsWith: 'e'
            caseSensitive: true
      - field: 'Value'
        notStartsWith:
          - 'a'
          - 'e'
      - anyOf:
          - field: 'OtherValue'
            exists: false
          - field: 'OtherValue'
            notStartsWith: 'a'
            convert: true

---
# Synopsis: Test endsWith
apiVersion: github.com/microsoft/PSRule/v1
kind: Selector
metadata:
  name: YamlEndsWith
spec:
  if:
    allOf:
      - anyOf:
          - field: 'Value'
            endsWith: 'c'
          - field: 'Value'
            endsWith: 'g'
            caseSensitive: true
      - field: 'Value'
        endsWith:
          - 'c'
          - 'g'
      - anyOf:
          - field: 'OtherValue'
            exists: false
          - field: 'OtherValue'
            endsWith: 'l'
            convert: true

---
# Synopsis: Test notEndsWith
apiVersion: github.com/microsoft/PSRule/v1
kind: Selector
metadata:
  name: YamlNotEndsWith
spec:
  if:
    allOf:
      - anyOf:
          - field: 'Value'
            notEndsWith: 'c'
          - field: 'Value'
            notEndsWith: 'g'
            caseSensitive: true
      - field: 'Value'
        notEndsWith:
          - 'c'
          - 'g'
      - anyOf:
          - field: 'OtherValue'
            exists: false
          - field: 'OtherValue'
            notEndsWith: 'l'
            convert: true

---
# Synopsis: Test contains
apiVersion: github.com/microsoft/PSRule/v1
kind: Selector
metadata:
  name: YamlContains
spec:
  if:
    allOf:
      - anyOf:
          - field: 'Value'
            contains: 'ab'
          - field: 'Value'
            contains: 'bc'
            caseSensitive: true
      - field: 'Value'
        contains:
          - 'ab'
          - 'bc'
      - anyOf:
          - field: 'OtherValue'
            exists: false
          - field: 'OtherValue'
            contains: 'l'
            convert: true

---
# Synopsis: Test notContains
apiVersion: github.com/microsoft/PSRule/v1
kind: Selector
metadata:
  name: YamlNotContains
spec:
  if:
    allOf:
      - anyOf:
          - field: 'Value'
            notContains: 'ab'
          - field: 'Value'
            notContains: 'bc'
            caseSensitive: true
      - field: 'Value'
        notContains:
          - 'ab'
          - 'bc'
      - anyOf:
          - field: 'OtherValue'
            exists: false
          - field: 'OtherValue'
            notContains: 'l'
            convert: true

---
# Synopsis: Test like
apiVersion: github.com/microsoft/PSRule/v1
kind: Selector
metadata:
  name: YamlLike
spec:
  if:
    allOf:
      - anyOf:
          - field: 'Value'
            like: 'ab*'
          - field: 'Value'
            like: '*f*'
            caseSensitive: true
      - field: 'Value'
        like:
          - 'ab*'
          - '*f*'
      - anyOf:
          - field: 'OtherValue'
            exists: false
          - field: 'OtherValue'
            like: '12*'
            convert: true

---
# Synopsis: Test notLike
apiVersion: github.com/microsoft/PSRule/v1
kind: Selector
metadata:
  name: YamlNotLike
spec:
  if:
    allOf:
      - anyOf:
          - field: 'Value'
            notLike: 'ab*'
          - field: 'Value'
            notLike: '*f*'
            caseSensitive: true
      - field: 'Value'
        notLike:
          - 'ab*'
          - '*f*'
      - anyOf:
          - field: 'OtherValue'
            exists: false
          - field: 'OtherValue'
            notLike: '12*'
            convert: true

---
# Synopsis: Test isString
apiVersion: github.com/microsoft/PSRule/v1
kind: Selector
metadata:
  name: YamlIsStringTrue
spec:
  if:
    field: 'Value'
    isString: true

---
# Synopsis: Test isString
apiVersion: github.com/microsoft/PSRule/v1
kind: Selector
metadata:
  name: YamlIsStringFalse
spec:
  if:
    field: 'Value'
    isString: false

---
# Synopsis: Test isArray
apiVersion: github.com/microsoft/PSRule/v1
kind: Selector
metadata:
  name: YamlIsArrayTrue
spec:
  if:
    field: 'Value'
    isArray: true

---
# Synopsis: Test isArray
apiVersion: github.com/microsoft/PSRule/v1
kind: Selector
metadata:
  name: YamlIsArrayFalse
spec:
  if:
    field: 'Value'
    isArray: false

---
# Synopsis: Test isBoolean
apiVersion: github.com/microsoft/PSRule/v1
kind: Selector
metadata:
  name: YamlIsBooleanTrue
spec:
  if:
    field: 'Value'
    isBoolean: true

---
# Synopsis: Test isBoolean with conversion
apiVersion: github.com/microsoft/PSRule/v1
kind: Selector
metadata:
  name: YamlIsBooleanTrueWithConversion
spec:
  if:
    field: 'Value'
    isBoolean: true
    convert: true

---
# Synopsis: Test isBoolean
apiVersion: github.com/microsoft/PSRule/v1
kind: Selector
metadata:
  name: YamlIsBooleanFalse
spec:
  if:
    field: 'Value'
    isBoolean: false

---
# Synopsis: Test isBoolean with conversion
apiVersion: github.com/microsoft/PSRule/v1
kind: Selector
metadata:
  name: YamlIsBooleanFalseWithConversion
spec:
  if:
    field: 'Value'
    isBoolean: false
    convert: true

---
# Synopsis: Test isDateTime
apiVersion: github.com/microsoft/PSRule/v1
kind: Selector
metadata:
  name: YamlIsDateTimeTrue
spec:
  if:
    field: 'Value'
    isDateTime: true

---
# Synopsis: Test isDateTime with conversion
apiVersion: github.com/microsoft/PSRule/v1
kind: Selector
metadata:
  name: YamlIsDateTimeTrueWithConversion
spec:
  if:
    field: 'Value'
    isDateTime: true
    convert: true

---
# Synopsis: Test isDateTime
apiVersion: github.com/microsoft/PSRule/v1
kind: Selector
metadata:
  name: YamlIsDateTimeFalse
spec:
  if:
    field: 'Value'
    isDateTime: false

---
# Synopsis: Test isDateTime with conversion
apiVersion: github.com/microsoft/PSRule/v1
kind: Selector
metadata:
  name: YamlIsDateTimeFalseWithConversion
spec:
  if:
    field: 'Value'
    isDateTime: false
    convert: true

---
# Synopsis: Test IsInteger
apiVersion: github.com/microsoft/PSRule/v1
kind: Selector
metadata:
  name: YamlIsIntegerTrue
spec:
  if:
    field: 'Value'
    isInteger: true

---
# Synopsis: Test IsInteger with conversion
apiVersion: github.com/microsoft/PSRule/v1
kind: Selector
metadata:
  name: YamlIsIntegerTrueWithConversion
spec:
  if:
    field: 'Value'
    isInteger: true
    convert: true

---
# Synopsis: Test IsInteger
apiVersion: github.com/microsoft/PSRule/v1
kind: Selector
metadata:
  name: YamlIsIntegerFalse
spec:
  if:
    field: 'Value'
    isInteger: false

---
# Synopsis: Test IsInteger with conversion
apiVersion: github.com/microsoft/PSRule/v1
kind: Selector
metadata:
  name: YamlIsIntegerFalseWithConversion
spec:
  if:
    field: 'Value'
    isInteger: false
    convert: true

---
# Synopsis: Test IsNumeric
apiVersion: github.com/microsoft/PSRule/v1
kind: Selector
metadata:
  name: YamlIsNumericTrue
spec:
  if:
    field: 'Value'
    isNumeric: true

---
# Synopsis: Test IsNumeric with conversion
apiVersion: github.com/microsoft/PSRule/v1
kind: Selector
metadata:
  name: YamlIsNumericTrueWithConversion
spec:
  if:
    field: 'Value'
    isNumeric: true
    convert: true

---
# Synopsis: Test IsNumeric
apiVersion: github.com/microsoft/PSRule/v1
kind: Selector
metadata:
  name: YamlIsNumericFalse
spec:
  if:
    field: 'Value'
    isNumeric: false

---
# Synopsis: Test IsNumeric with conversion
apiVersion: github.com/microsoft/PSRule/v1
kind: Selector
metadata:
  name: YamlIsNumericFalseWithConversion
spec:
  if:
    field: 'Value'
    isNumeric: false
    convert: true

---
# Synopsis: Test isLower
apiVersion: github.com/microsoft/PSRule/v1
kind: Selector
metadata:
  name: YamlIsLowerTrue
spec:
  if:
    field: 'Value'
    isLower: true

---
# Synopsis: Test isLower
apiVersion: github.com/microsoft/PSRule/v1
kind: Selector
metadata:
  name: YamlIsLowerFalse
spec:
  if:
    field: 'Value'
    isLower: false

---
# Synopsis: Test isUpper
apiVersion: github.com/microsoft/PSRule/v1
kind: Selector
metadata:
  name: YamlIsUpperTrue
spec:
  if:
    field: 'Value'
    isUpper: true

---
# Synopsis: Test isUpper
apiVersion: github.com/microsoft/PSRule/v1
kind: Selector
metadata:
  name: YamlIsUpperFalse
spec:
  if:
    field: 'Value'
    isUpper: false

---
# Synopsis: Test setOf
apiVersion: github.com/microsoft/PSRule/v1
kind: Selector
metadata:
  name: YamlSetOf
spec:
  if:
    field: 'Value'
    setOf:
      - 'cluster-autoscaler'
      - 'kube-apiserver'
    caseSensitive: true

---
# Synopsis: Test subset
apiVersion: github.com/microsoft/PSRule/v1
kind: Selector
metadata:
  name: YamlSubset
spec:
  if:
    field: 'Value'
    subset:
      - 'cluster-autoscaler'
      - 'kube-apiserver'
    caseSensitive: true
    unique: true

---
# Synopsis: Test count
apiVersion: github.com/microsoft/PSRule/v1
kind: Selector
metadata:
  name: YamlCount
spec:
  if:
    field: 'Value'
    count: 2

---
# Synopsis: Test notCount
apiVersion: github.com/microsoft/PSRule/v1
kind: Selector
metadata:
  name: YamlNotCount
spec:
  if:
    field: 'Value'
    notCount: 2

---
# Synopsis: Test hasSchema
apiVersion: github.com/microsoft/PSRule/v1
kind: Selector
metadata:
  name: YamlHasSchema
spec:
  if:
    field: '.'
    hasSchema:
      - https://schema.management.azure.com/schemas/2019-04-01/deploymentParameters.json#
      - https://schema.management.azure.com/schemas/2015-01-01/deploymentParameters.json#

---
# Synopsis: Test hasSchema ignoring scheme
apiVersion: github.com/microsoft/PSRule/v1
kind: Selector
metadata:
  name: YamlHasSchemaIgnoreScheme
spec:
  if:
    field: '.'
    hasSchema:
      - https://schema.management.azure.com/schemas/2019-04-01/deploymentParameters.json#
      - https://schema.management.azure.com/schemas/2015-01-01/deploymentParameters.json#
    ignoreScheme: true

---
# Synopsis: Test hasSchema with case sensitivity
apiVersion: github.com/microsoft/PSRule/v1
kind: Selector
metadata:
  name: YamlHasSchemaCaseSensitive
spec:
  if:
    field: '.'
    hasSchema:
      - https://schema.management.azure.com/schemas/2015-01-01/deploymentParameters.json#
      - https://schema.management.azure.com/schemas/2019-04-01/deploymentParameters.json#
    caseSensitive: true

---
# Synopsis: Test hasSchema matching any schema
apiVersion: github.com/microsoft/PSRule/v1
kind: Selector
metadata:
  name: YamlHasAnySchema
spec:
  if:
    field: '.'
    hasSchema: []

---
# Synopsis: Test version
apiVersion: github.com/microsoft/PSRule/v1
kind: Selector
metadata:
  name: YamlVersion
spec:
  if:
    field: 'version'
    version: '^1.2.3'

---
# Synopsis: Test version with prerelease
apiVersion: github.com/microsoft/PSRule/v1
kind: Selector
metadata:
  name: YamlVersionWithPrerelease
spec:
  if:
    field: 'version'
    version: '^1.2.3'
    includePrerelease: true

---
# Synopsis: Test any valid version
apiVersion: github.com/microsoft/PSRule/v1
kind: Selector
metadata:
  name: YamlVersionAnyVersion
spec:
  if:
    field: 'version'
    version: ''
    includePrerelease: true

---
# Synopsis: Test any valid stable version
apiVersion: github.com/microsoft/PSRule/v1
kind: Selector
metadata:
  name: YamlVersionAnyStableVersion
spec:
  if:
    field: 'version'
    version: ''

---
# Synopsis: Test hasDefault
apiVersion: github.com/microsoft/PSRule/v1
kind: Selector
metadata:
  name: YamlHasDefault
spec:
  if:
    allOf:
      - field: 'integerValue'
        hasDefault: 100
      - field: 'boolValue'
        hasDefault: true
      - field: 'stringValue'
        hasDefault: 'testValue'
        caseSensitive: true

#region With type tests

---
# Synopsis: Test with type
apiVersion: github.com/microsoft/PSRule/v1
kind: Selector
metadata:
  name: YamlTypeEquals
spec:
  if:
    type: '.'
    equals: 'CustomType1'

#endregion With type tests

#region With name tests

---
# Synopsis: Test equals with name
apiVersion: github.com/microsoft/PSRule/v1
kind: Selector
metadata:
  name: YamlNameEquals
spec:
  if:
    name: '.'
    equals: 'TargetObject1'

---
# Synopsis: Test notEquals with name
apiVersion: github.com/microsoft/PSRule/v1
kind: Selector
metadata:
  name: YamlNameNotEquals
spec:
  if:
    name: '.'
    notEquals: 'TargetObject1'

---
# Synopsis: Test hasValue with name
apiVersion: github.com/microsoft/PSRule/v1
kind: Selector
metadata:
  name: YamlNameHasValue
spec:
  if:
    name: '.'
    hasValue: true

---
# Synopsis: Test match with name
apiVersion: github.com/microsoft/PSRule/v1
kind: Selector
metadata:
  name: YamlNameMatch
spec:
  if:
    name: '.'
    match: '.*1$'

---
# Synopsis: Test notMatch with name
apiVersion: github.com/microsoft/PSRule/v1
kind: Selector
metadata:
  name: YamlNameNotMatch
spec:
  if:
    name: '.'
    notMatch: '.*1$'

---
# Synopsis: Test in with name
apiVersion: github.com/microsoft/PSRule/v1
kind: Selector
metadata:
  name: YamlNameIn
spec:
  if:
    name: '.'
    in:
      - 'TargetObject1'

---
# Synopsis: Test notIn with name
apiVersion: github.com/microsoft/PSRule/v1
kind: Selector
metadata:
  name: YamlNameNotIn
spec:
  if:
    name: '.'
    notIn:
      - 'TargetObject1'

---
# Synopsis: Test startsWith with name
apiVersion: github.com/microsoft/PSRule/v1
kind: Selector
metadata:
  name: YamlNameStartsWith
spec:
  if:
    name: '.'
    startsWith:
      - '1'

---
# Synopsis: Test endsWith with name
apiVersion: github.com/microsoft/PSRule/v1
kind: Selector
metadata:
  name: YamlNameEndsWith
spec:
  if:
    name: '.'
    endsWith:
      - '1'

---
# Synopsis: Test contains with name
apiVersion: github.com/microsoft/PSRule/v1
kind: Selector
metadata:
  name: YamlNameContains
spec:
  if:
    name: '.'
    contains:
      - '.1.'

---
# Synopsis: Test isString with name
apiVersion: github.com/microsoft/PSRule/v1
kind: Selector
metadata:
  name: YamlNameIsString
spec:
  if:
    name: '.'
    isString: true

---
# Synopsis: Test less with name
apiVersion: github.com/microsoft/PSRule/v1
kind: Selector
metadata:
  name: YamlNameLess
spec:
  if:
    name: '.'
    less: 8

---
# Synopsis: Test lessOrEquals with name
apiVersion: github.com/microsoft/PSRule/v1
kind: Selector
metadata:
  name: YamlNameLessOrEquals
spec:
  if:
    name: '.'
    lessOrEquals: 7

---
# Synopsis: Test greater with name
apiVersion: github.com/microsoft/PSRule/v1
kind: Selector
metadata:
  name: YamlNameGreater
spec:
  if:
    name: '.'
    greater: 8

---
# Synopsis: Test greaterOrEquals with name
apiVersion: github.com/microsoft/PSRule/v1
kind: Selector
metadata:
  name: YamlNameGreaterOrEquals
spec:
  if:
    name: '.'
    greaterOrEquals: 9

---
# Synopsis: Test isLower with name
apiVersion: github.com/microsoft/PSRule/v1
kind: Selector
metadata:
  name: YamlNameIsLower
spec:
  if:
    name: '.'
    isLower: true

---
# Synopsis: Test isUpper with name
apiVersion: github.com/microsoft/PSRule/v1
kind: Selector
metadata:
  name: YamlNameIsUpper
spec:
  if:
    name: '.'
    isUpper: true

#endregion With name tests

---
# Synopsis: Test endsWith with source
apiVersion: github.com/microsoft/PSRule/v1
kind: Selector
metadata:
  name: YamlEndsWithSource
spec:
  if:
    source: 'Template'
    endsWith: '/template.json'

---
# Synopsis: Test withinPath with source
apiVersion: github.com/microsoft/PSRule/v1
kind: Selector
metadata:
  name: YamlSourceWithinPath
spec:
  if:
    source: 'Template'
    withinPath:
      - 'deployments/path/'

---
# Synopsis: Test withinPath with field
apiVersion: github.com/microsoft/PSRule/v1
kind: Selector
metadata:
  name: YamlFieldWithinPath
spec:
  if:
    field: 'FullName'
    withinPath:
      - 'policy/'
      - 'security/'

---
# Synopsis: Test withinPath with source and case sensitive
apiVersion: github.com/microsoft/PSRule/v1
kind: Selector
metadata:
  name: YamlSourceWithinPathCaseSensitive
spec:
  if:
    source: 'Template'
    withinPath:
      - 'Deployments/Path/'
    caseSensitive: true

---
# Synopsis: Test withinPath with field and case sensitive
apiVersion: github.com/microsoft/PSRule/v1
kind: Selector
metadata:
  name: YamlFieldWithinPathCaseSensitive
spec:
  if:
    field: 'FullName'
    withinPath:
      - 'POLICY/'
      - 'SECURITY/'
    caseSensitive: true

---
# Synopsis: Test notWithinPath with source
apiVersion: github.com/microsoft/PSRule/v1
kind: Selector
metadata:
  name: YamlSourceNotWithinPath
spec:
  if:
    source: 'Template'
    notWithinPath:
      - 'deployments/path/'

---
# Synopsis: Test notWithinPath with field
apiVersion: github.com/microsoft/PSRule/v1
kind: Selector
metadata:
  name: YamlFieldNotWithinPath
spec:
  if:
    field: 'FullName'
    notWithinPath:
      - 'policy/'
      - 'security/'

---
# Synopsis: Test notWithinPath with source and case sensitive
apiVersion: github.com/microsoft/PSRule/v1
kind: Selector
metadata:
  name: YamlSourceNotWithinPathCaseSensitive
spec:
  if:
    source: 'Template'
    notWithinPath:
      - 'Deployments/Path/'
    caseSensitive: true

---
# Synopsis: Test notWithinPath with field and case sensitive
apiVersion: github.com/microsoft/PSRule/v1
kind: Selector
metadata:
  name: YamlFieldNotWithinPathCaseSensitive
spec:
  if:
    field: 'FullName'
    notWithinPath:
      - 'POLICY/'
      - 'SECURITY/'
    caseSensitive: true

---
# Synopsis: Test scope property with equals.
apiVersion: github.com/microsoft/PSRule/v1
kind: Selector
metadata:
  name: YamlScopeEquals
spec:
  if:
    scope: .
    equals:
      - /scope1

---
# Synopsis: Test scope property with startsWith.
apiVersion: github.com/microsoft/PSRule/v1
kind: Selector
metadata:
  name: YamlScopeStartsWith
spec:
  if:
    scope: .
    startsWith:
      - /scope1/
      - /scope2/

---
# Synopsis: Test scope property with hasValue.
apiVersion: github.com/microsoft/PSRule/v1
kind: Selector
metadata:
  name: YamlScopeHasValueFalse
spec:
  if:
    scope: .
    hasValue: false

---
# Synopsis: Test scope property with hasValue.
apiVersion: github.com/microsoft/PSRule/v1
kind: Selector
metadata:
  name: YamlScopeHasValueTrue
spec:
  if:
    scope: .
    hasValue: true

---
# Synopsis: Test comparison with apiVersion.
apiVersion: github.com/microsoft/PSRule/v1
kind: Selector
metadata:
  name: YamlAPIVersion
spec:
  if:
    field: dateVersion
    apiVersion: '>=2015-10-01'

---
# Synopsis: Test comparison with apiVersion.
apiVersion: github.com/microsoft/PSRule/v1
kind: Selector
metadata:
  name: YamlAPIVersionWithPrerelease
spec:
  if:
    field: dateVersion
    apiVersion: '>=2015-10-01'
    includePrerelease: true

---
# Synopsis: Test comparison with apiVersion.
apiVersion: github.com/microsoft/PSRule/v1
kind: Selector
metadata:
  name: YamlAPIVersionAnyVersion
spec:
  if:
    field: dateVersion
    apiVersion: ''
    includePrerelease: true

---
# Synopsis: Test comparison with apiVersion.
apiVersion: github.com/microsoft/PSRule/v1
kind: Selector
metadata:
  name: YamlAPIVersionAnyStableVersion
spec:
  if:
    field: dateVersion
    apiVersion: ''

---
# Synopsis: Test all of with quantifier.
apiVersion: github.com/microsoft/PSRule/v1
kind: Selector
metadata:
  name: YamlAllOfWithQuantifier
spec:
  if:
    field: properties.logs[*]
    greaterOrEqual: 1
    allOf:
      - field: name
        equals: log1
