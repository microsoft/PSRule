# Copyright (c) Microsoft Corporation.
# Licensed under the MIT License.

# Selectors for unit testing

---
# Synopsis: A selector to match basic objects
apiVersion: github.com/microsoft/PSRule/v1
kind: Selector
metadata:
  name: BasicSelector
spec:
  if:
    allOf:
    - field: Name
      equals: TargetObject1
    - field: Value
      equals: value1

---
# Synopsis: A selector to match objects using a specific JSON schema
apiVersion: github.com/microsoft/PSRule/v1
kind: Selector
metadata:
  name: SelectJsonSchema
spec:
  if:
    field: '$schema'
    match: '^(https{0,1}://schema\.management\.azure\.com/schemas/.*/deploymentTemplate\.json)$'

---
# Synopsis: A selector to match object with a field
apiVersion: github.com/microsoft/PSRule/v1
kind: Selector
metadata:
  name: HasCustomValueField
spec:
  if:
    field: 'CustomValue'
    exists: true

---
# Synopsis: Test AnyOf
apiVersion: github.com/microsoft/PSRule/v1
kind: Selector
metadata:
  name: YamlAnyOf
spec:
  if:
    anyOf:
    - field: 'AlternateName'
      exists: true
    - field: 'Name'
      exists: true

---
# Synopsis: Test AllOf
apiVersion: github.com/microsoft/PSRule/v1
kind: Selector
metadata:
  name: YamlAllOf
spec:
  if:
    allOf:
    - field: 'AlternateName'
      exists: true
    - field: 'Name'
      exists: true

---
# Synopsis: Test Not
apiVersion: github.com/microsoft/PSRule/v1
kind: Selector
metadata:
  name: YamlNot
spec:
  if:
    not:
      anyOf:
      - field: 'AlternateName'
        exists: true
      - field: 'Name'
        exists: true

---
# Synopsis: Test custom value is in
apiVersion: github.com/microsoft/PSRule/v1
kind: Selector
metadata:
  name: YamlCustomValueIn
spec:
  if:
    field: 'CustomValue'
    in:
    - 'Value1'
    - 'Value2'

---
# Synopsis: Test exists true
apiVersion: github.com/microsoft/PSRule/v1
kind: Selector
metadata:
  name: YamlExistsTrue
spec:
  if:
    field: 'Value'
    exists: true

---
# Synopsis: Test exists false
apiVersion: github.com/microsoft/PSRule/v1
kind: Selector
metadata:
  name: YamlExistsFalse
spec:
  if:
    field: 'Value'
    exists: false

---
# Synopsis: Test equals
apiVersion: github.com/microsoft/PSRule/v1
kind: Selector
metadata:
  name: YamlEquals
spec:
  if:
    allOf:
    - field: 'ValueString'
      equals: 'abc'
    - field: 'ValueInt'
      equals: 123
    - field: 'ValueBool'
      equals: true

---
# Synopsis: Test notEquals
apiVersion: github.com/microsoft/PSRule/v1
kind: Selector
metadata:
  name: YamlNotEquals
spec:
  if:
    allOf:
    - field: 'ValueString'
      notEquals: 'abc'
    - field: 'ValueInt'
      notEquals: 123
    - field: 'ValueBool'
      notEquals: true

---
# Synopsis: Test hasValue true
apiVersion: github.com/microsoft/PSRule/v1
kind: Selector
metadata:
  name: YamlHasValueTrue
spec:
  if:
    field: 'Value'
    hasValue: true

---
# Synopsis: Test hasValue false
apiVersion: github.com/microsoft/PSRule/v1
kind: Selector
metadata:
  name: YamlHasValueFalse
spec:
  if:
    field: 'Value'
    hasValue: false

---
# Synopsis: Test match
apiVersion: github.com/microsoft/PSRule/v1
kind: Selector
metadata:
  name: YamlMatch
spec:
  if:
    field: 'Value'
    match: '^(abc|efg)$'

---
# Synopsis: Test notMatch
apiVersion: github.com/microsoft/PSRule/v1
kind: Selector
metadata:
  name: YamlNotMatch
spec:
  if:
    field: 'Value'
    notMatch: '^(abc|efg)$'

---
# Synopsis: Test in
apiVersion: github.com/microsoft/PSRule/v1
kind: Selector
metadata:
  name: YamlIn
spec:
  if:
    field: 'Value'
    in:
    - 'Value1'
    - 'Value2'

---
# Synopsis: Test notIn
apiVersion: github.com/microsoft/PSRule/v1
kind: Selector
metadata:
  name: YamlNotIn
spec:
  if:
    field: 'Value'
    notIn:
    - 'Value1'
    - 'Value2'

---
# Synopsis: Test less
apiVersion: github.com/microsoft/PSRule/v1
kind: Selector
metadata:
  name: YamlLess
spec:
  if:
    field: 'Value'
    less: 3

---
# Synopsis: Test lessOrEquals
apiVersion: github.com/microsoft/PSRule/v1
kind: Selector
metadata:
  name: YamlLessOrEquals
spec:
  if:
    field: 'Value'
    lessOrEquals: 3

---
# Synopsis: Test greater
apiVersion: github.com/microsoft/PSRule/v1
kind: Selector
metadata:
  name: YamlGreater
spec:
  if:
    field: 'Value'
    greater: 3

---
# Synopsis: Test greaterOrEquals
apiVersion: github.com/microsoft/PSRule/v1
kind: Selector
metadata:
  name: YamlGreaterOrEquals
spec:
  if:
    field: 'Value'
    greaterOrEquals: 3

---
# Synopsis: Test startsWith
apiVersion: github.com/microsoft/PSRule/v1
kind: Selector
metadata:
  name: YamlStartsWith
spec:
  if:
    allOf:
    - anyOf:
      - field: 'Value'
        startsWith: 'a'
      - field: 'Value'
        startsWith: 'e'
    - field: 'Value'
      startsWith:
      - 'a'
      - 'e'

---
# Synopsis: Test endsWith
apiVersion: github.com/microsoft/PSRule/v1
kind: Selector
metadata:
  name: YamlEndsWith
spec:
  if:
    allOf:
    - anyOf:
      - field: 'Value'
        endsWith: 'c'
      - field: 'Value'
        endsWith: 'g'
    - field: 'Value'
      endsWith:
      - 'c'
      - 'g'

---
# Synopsis: Test contains
apiVersion: github.com/microsoft/PSRule/v1
kind: Selector
metadata:
  name: YamlContains
spec:
  if:
    allOf:
    - anyOf:
      - field: 'Value'
        contains: 'ab'
      - field: 'Value'
        contains: 'bc'
    - field: 'Value'
      contains:
      - 'ab'
      - 'bc'

---
# Synopsis: Test isString
apiVersion: github.com/microsoft/PSRule/v1
kind: Selector
metadata:
  name: YamlIsStringTrue
spec:
  if:
    field: 'Value'
    isString: true

---
# Synopsis: Test isString
apiVersion: github.com/microsoft/PSRule/v1
kind: Selector
metadata:
  name: YamlIsStringFalse
spec:
  if:
    field: 'Value'
    isString: false

---
# Synopsis: Test isLower
apiVersion: github.com/microsoft/PSRule/v1
kind: Selector
metadata:
  name: YamlIsLowerTrue
spec:
  if:
    field: 'Value'
    isLower: true

---
# Synopsis: Test isLower
apiVersion: github.com/microsoft/PSRule/v1
kind: Selector
metadata:
  name: YamlIsLowerFalse
spec:
  if:
    field: 'Value'
    isLower: false

---
# Synopsis: Test isUpper
apiVersion: github.com/microsoft/PSRule/v1
kind: Selector
metadata:
  name: YamlIsUpperTrue
spec:
  if:
    field: 'Value'
    isUpper: true

---
# Synopsis: Test isUpper
apiVersion: github.com/microsoft/PSRule/v1
kind: Selector
metadata:
  name: YamlIsUpperFalse
spec:
  if:
    field: 'Value'
    isUpper: false

---
# Synopsis: Test setOf
apiVersion: github.com/microsoft/PSRule/v1
kind: Selector
metadata:
  name: YamlSetOf
spec:
  if:
    field: 'Value'
    setOf:
    - 'cluster-autoscaler'
    - 'kube-apiserver'
    caseSensitive: true

---
# Synopsis: Test subset
apiVersion: github.com/microsoft/PSRule/v1
kind: Selector
metadata:
  name: YamlSubset
spec:
  if:
    field: 'Value'
    subset:
    - 'cluster-autoscaler'
    - 'kube-apiserver'
    caseSensitive: true
    unique: true

---
# Synopsis: Test count
apiVersion: github.com/microsoft/PSRule/v1
kind: Selector
metadata:
  name: YamlCount
spec:
  if:
    field: 'Value'
    count: 2

---
# Synopsis: Test hasSchema
apiVersion: github.com/microsoft/PSRule/v1
kind: Selector
metadata:
  name: YamlHasSchema
spec:
  if:
    field: '.'
    hasSchema:
    - https://schema.management.azure.com/schemas/2019-04-01/deploymentParameters.json#
    - https://schema.management.azure.com/schemas/2015-01-01/deploymentParameters.json#

---
# Synopsis: Test hasSchema ignoring scheme
apiVersion: github.com/microsoft/PSRule/v1
kind: Selector
metadata:
  name: YamlHasSchemaIgnoreScheme
spec:
  if:
    field: '.'
    hasSchema:
    - https://schema.management.azure.com/schemas/2019-04-01/deploymentParameters.json#
    - https://schema.management.azure.com/schemas/2015-01-01/deploymentParameters.json#
    ignoreScheme: true

---
# Synopsis: Test hasSchema with case sensitivity
apiVersion: github.com/microsoft/PSRule/v1
kind: Selector
metadata:
  name: YamlHasSchemaCaseSensitive
spec:
  if:
    field: '.'
    hasSchema:
    - https://schema.management.azure.com/schemas/2015-01-01/deploymentParameters.json#
    - https://schema.management.azure.com/schemas/2019-04-01/deploymentParameters.json#
    caseSensitive: true

---
# Synopsis: Test hasSchema matching any schema
apiVersion: github.com/microsoft/PSRule/v1
kind: Selector
metadata:
  name: YamlHasAnySchema
spec:
  if:
    field: '.'
    hasSchema: []

#region With type tests

---
# Synopsis: Test with type
apiVersion: github.com/microsoft/PSRule/v1
kind: Selector
metadata:
  name: YamlTypeEquals
spec:
  if:
    type: '.'
    equals: 'CustomType1'

#endregion With type tests

#region With name tests

---
# Synopsis: Test equals with name
apiVersion: github.com/microsoft/PSRule/v1
kind: Selector
metadata:
  name: YamlNameEquals
spec:
  if:
    name: '.'
    equals: 'TargetObject1'

---
# Synopsis: Test notEquals with name
apiVersion: github.com/microsoft/PSRule/v1
kind: Selector
metadata:
  name: YamlNameNotEquals
spec:
  if:
    name: '.'
    notEquals: 'TargetObject1'

---
# Synopsis: Test hasValue with name
apiVersion: github.com/microsoft/PSRule/v1
kind: Selector
metadata:
  name: YamlNameHasValue
spec:
  if:
    name: '.'
    hasValue: true

---
# Synopsis: Test match with name
apiVersion: github.com/microsoft/PSRule/v1
kind: Selector
metadata:
  name: YamlNameMatch
spec:
  if:
    name: '.'
    match: '.*1$'

---
# Synopsis: Test notMatch with name
apiVersion: github.com/microsoft/PSRule/v1
kind: Selector
metadata:
  name: YamlNameNotMatch
spec:
  if:
    name: '.'
    notMatch: '.*1$'

---
# Synopsis: Test in with name
apiVersion: github.com/microsoft/PSRule/v1
kind: Selector
metadata:
  name: YamlNameIn
spec:
  if:
    name: '.'
    in:
    - 'TargetObject1'

---
# Synopsis: Test notIn with name
apiVersion: github.com/microsoft/PSRule/v1
kind: Selector
metadata:
  name: YamlNameNotIn
spec:
  if:
    name: '.'
    notIn:
    - 'TargetObject1'




---
# Synopsis: Test startsWith with name
apiVersion: github.com/microsoft/PSRule/v1
kind: Selector
metadata:
  name: YamlNameStartsWith
spec:
  if:
    name: '.'
    startsWith:
    - '1'

---
# Synopsis: Test endsWith with name
apiVersion: github.com/microsoft/PSRule/v1
kind: Selector
metadata:
  name: YamlNameEndsWith
spec:
  if:
    name: '.'
    endsWith:
    - '1'

---
# Synopsis: Test contains with name
apiVersion: github.com/microsoft/PSRule/v1
kind: Selector
metadata:
  name: YamlNameContains
spec:
  if:
    name: '.'
    contains:
    - '.1.'

---
# Synopsis: Test isString with name
apiVersion: github.com/microsoft/PSRule/v1
kind: Selector
metadata:
  name: YamlNameIsString
spec:
  if:
    name: '.'
    isString: true

---
# Synopsis: Test less with name
apiVersion: github.com/microsoft/PSRule/v1
kind: Selector
metadata:
  name: YamlNameLess
spec:
  if:
    name: '.'
    less: 8

---
# Synopsis: Test lessOrEquals with name
apiVersion: github.com/microsoft/PSRule/v1
kind: Selector
metadata:
  name: YamlNameLessOrEquals
spec:
  if:
    name: '.'
    lessOrEquals: 7

---
# Synopsis: Test greater with name
apiVersion: github.com/microsoft/PSRule/v1
kind: Selector
metadata:
  name: YamlNameGreater
spec:
  if:
    name: '.'
    greater: 8

---
# Synopsis: Test greaterOrEquals with name
apiVersion: github.com/microsoft/PSRule/v1
kind: Selector
metadata:
  name: YamlNameGreaterOrEquals
spec:
  if:
    name: '.'
    greaterOrEquals: 9

---
# Synopsis: Test isLower with name
apiVersion: github.com/microsoft/PSRule/v1
kind: Selector
metadata:
  name: YamlNameIsLower
spec:
  if:
    name: '.'
    isLower: true

---
# Synopsis: Test isUpper with name
apiVersion: github.com/microsoft/PSRule/v1
kind: Selector
metadata:
  name: YamlNameIsUpper
spec:
  if:
    name: '.'
    isUpper: true

#endregion With name tests
