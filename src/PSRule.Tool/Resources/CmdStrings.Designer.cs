//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace PSRule.Tool.Resources {
    using System;
    
    
    /// <summary>
    ///   A strongly-typed resource class, for looking up localized strings, etc.
    /// </summary>
    // This class was auto-generated by the StronglyTypedResourceBuilder
    // class via a tool like ResGen or Visual Studio.
    // To add or remove a member, edit your .ResX file then rerun ResGen
    // with the /str option, or rebuild your VS project.
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Resources.Tools.StronglyTypedResourceBuilder", "17.0.0.0")]
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    [global::System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
    internal class CmdStrings {
        
        private static global::System.Resources.ResourceManager resourceMan;
        
        private static global::System.Globalization.CultureInfo resourceCulture;
        
        [global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode")]
        internal CmdStrings() {
        }
        
        /// <summary>
        ///   Returns the cached ResourceManager instance used by this class.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        internal static global::System.Resources.ResourceManager ResourceManager {
            get {
                if (object.ReferenceEquals(resourceMan, null)) {
                    global::System.Resources.ResourceManager temp = new global::System.Resources.ResourceManager("PSRule.Tool.Resources.CmdStrings", typeof(CmdStrings).Assembly);
                    resourceMan = temp;
                }
                return resourceMan;
            }
        }
        
        /// <summary>
        ///   Overrides the current thread's CurrentUICulture property for all
        ///   resource lookups using this strongly typed resource class.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        internal static global::System.Globalization.CultureInfo Culture {
            get {
                return resourceCulture;
            }
            set {
                resourceCulture = value;
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to PSRule CLI.
        /// </summary>
        internal static string Cmd_Description {
            get {
                return ResourceManager.GetString("Cmd_Description", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Add one or more modules to the lock file..
        /// </summary>
        internal static string Module_Add_Description {
            get {
                return ResourceManager.GetString("Module_Add_Description", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Override the module even if it already is added to the module list..
        /// </summary>
        internal static string Module_Add_Force_Description {
            get {
                return ResourceManager.GetString("Module_Add_Force_Description", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Skip verification of the module..
        /// </summary>
        internal static string Module_Add_SkipVerification_Description {
            get {
                return ResourceManager.GetString("Module_Add_SkipVerification_Description", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The target version of the module to add..
        /// </summary>
        internal static string Module_Add_Version_Description {
            get {
                return ResourceManager.GetString("Module_Add_Version_Description", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Manage modules tracked by the PSRule lock file. To install modules within the lock file, use the `restore` command instead..
        /// </summary>
        internal static string Module_Description {
            get {
                return ResourceManager.GetString("Module_Description", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The name of one or more modules..
        /// </summary>
        internal static string Module_Module_Description {
            get {
                return ResourceManager.GetString("Module_Module_Description", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Remove one or more modules from the lock file..
        /// </summary>
        internal static string Module_Remove_Description {
            get {
                return ResourceManager.GetString("Module_Remove_Description", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Upgrade to the latest versions of any modules within the lock file..
        /// </summary>
        internal static string Module_Upgrade_Description {
            get {
                return ResourceManager.GetString("Module_Upgrade_Description", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Return debug output..
        /// </summary>
        internal static string Options_Debug_Description {
            get {
                return ResourceManager.GetString("Options_Debug_Description", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The name of one or more modules to use during analysis..
        /// </summary>
        internal static string Options_Module_Description {
            get {
                return ResourceManager.GetString("Options_Module_Description", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Specifies the path to an options file..
        /// </summary>
        internal static string Options_Option_Description {
            get {
                return ResourceManager.GetString("Options_Option_Description", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The path to run commands within. By default, this is the current working directory..
        /// </summary>
        internal static string Options_Path_Description {
            get {
                return ResourceManager.GetString("Options_Path_Description", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Return verbose output..
        /// </summary>
        internal static string Options_Verbose_Description {
            get {
                return ResourceManager.GetString("Options_Verbose_Description", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Restore modules defined in configuration locally..
        /// </summary>
        internal static string Restore_Description {
            get {
                return ResourceManager.GetString("Restore_Description", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Restore modules even when an existing version that meets constaints is already installed locally..
        /// </summary>
        internal static string Restore_Force_Description {
            get {
                return ResourceManager.GetString("Restore_Force_Description", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The name of a specific baseline to use..
        /// </summary>
        internal static string Run_Baseline_Description {
            get {
                return ResourceManager.GetString("Run_Baseline_Description", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Run rule analysis..
        /// </summary>
        internal static string Run_Description {
            get {
                return ResourceManager.GetString("Run_Description", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Specifies the rule results to show in output. By default, Pass/ Fail/ Error results are shown..
        /// </summary>
        internal static string Run_Outcome_Description {
            get {
                return ResourceManager.GetString("Run_Outcome_Description", resourceCulture);
            }
        }
    }
}
